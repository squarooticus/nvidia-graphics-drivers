From edf20b085063c61031247fe3476a68a629b10da6 Mon Sep 17 00:00:00 2001
From: Andreas Beckmann <anbe@debian.org>
Date: Tue, 27 Jun 2023 22:26:21 +0200
Subject: [PATCH] backport vm_area_struct_has_const_vm_flags changes from
 470.199.02

---
 common/inc/nv-mm.h   | 22 ++++++++++++++++++++++
 conftest.sh          | 19 +++++++++++++++++++
 nvidia/nv-mmap.c     | 12 ++++++------
 nvidia/nvidia.Kbuild |  1 +
 4 files changed, 48 insertions(+), 6 deletions(-)

diff --git a/common/inc/nv-mm.h b/common/inc/nv-mm.h
index 50a0760..70b3814 100644
--- a/common/inc/nv-mm.h
+++ b/common/inc/nv-mm.h
@@ -282,4 +282,26 @@ static inline struct rw_semaphore *nv_mmap_get_lock(struct mm_struct *mm)
 #endif
 }
 
+#if defined(NV_VM_AREA_STRUCT_HAS_CONST_VM_FLAGS)
+static inline void nv_vm_flags_set(struct vm_area_struct *vma, vm_flags_t flags)
+{
+    vm_flags_set(vma, flags);
+}
+
+static inline void nv_vm_flags_clear(struct vm_area_struct *vma, vm_flags_t flags)
+{
+    vm_flags_clear(vma, flags);
+}
+#else
+static inline void nv_vm_flags_set(struct vm_area_struct *vma, unsigned long flags)
+{
+    vma->vm_flags |= flags;
+}
+
+static inline void nv_vm_flags_clear(struct vm_area_struct *vma, unsigned long flags)
+{
+    vma->vm_flags &= ~flags;
+}
+#endif
+
 #endif // __NV_MM_H__
diff --git a/conftest.sh b/conftest.sh
index 4b9ee38..3476202 100755
--- a/conftest.sh
+++ b/conftest.sh
@@ -4193,6 +4193,25 @@ compile_test() {
             compile_check_conftest "$CODE" "NV_DRM_CONNECTOR_HAS_OVERRIDE_EDID" "" "types"
         ;;
 
+        vm_area_struct_has_const_vm_flags)
+            #
+            # Determine if the 'vm_area_struct' structure has
+            # const 'vm_flags'.
+            #
+            # A union of '__vm_flags' and 'const vm_flags' was added 
+            # by commit bc292ab00f6c ("mm: introduce vma->vm_flags
+            # wrapper functions") in mm-stable branch (2023-02-09)
+            # of the akpm/mm maintainer tree.
+            #
+            CODE="
+            #include <linux/mm_types.h>
+            int conftest_vm_area_struct_has_const_vm_flags(void) {
+                return offsetof(struct vm_area_struct, __vm_flags);
+            }"
+
+            compile_check_conftest "$CODE" "NV_VM_AREA_STRUCT_HAS_CONST_VM_FLAGS" "" "types"
+        ;;
+
         # When adding a new conftest entry, please use the correct format for
         # specifying the relevant upstream Linux kernel commit.
         #
diff --git a/nvidia/nv-mmap.c b/nvidia/nv-mmap.c
index 7711d88..29ac828 100644
--- a/nvidia/nv-mmap.c
+++ b/nvidia/nv-mmap.c
@@ -357,7 +357,7 @@ static int nvidia_mmap_numa(
     }
 
     // Needed for the linux kernel for mapping compound pages
-    vma->vm_flags |= VM_MIXEDMAP;
+    nv_vm_flags_set(vma, VM_MIXEDMAP);
 
     for (i = 0, addr = mmap_context->page_array[0]; i < pages;
          addr = mmap_context->page_array[++i], start += PAGE_SIZE)
@@ -483,7 +483,7 @@ int nvidia_mmap_helper(
             }
         }
 
-        vma->vm_flags |= VM_IO;
+        nv_vm_flags_set(vma, VM_IO);
     }
     else
     {
@@ -550,15 +550,15 @@ int nvidia_mmap_helper(
 
         NV_PRINT_AT(NV_DBG_MEMINFO, at);
 
-        vma->vm_flags |= (VM_IO | VM_LOCKED | VM_RESERVED);
-        vma->vm_flags |= (VM_DONTEXPAND | VM_DONTDUMP);
+        nv_vm_flags_set(vma, VM_IO | VM_LOCKED | VM_RESERVED);
+        nv_vm_flags_set(vma, VM_DONTEXPAND | VM_DONTDUMP);
     }
 
     if ((prot & NV_PROTECT_WRITEABLE) == 0)
     {
         vma->vm_page_prot = NV_PGPROT_READ_ONLY(vma->vm_page_prot);
-        vma->vm_flags &= ~VM_WRITE;
-        vma->vm_flags &= ~VM_MAYWRITE;
+        nv_vm_flags_clear(vma, VM_WRITE);
+        nv_vm_flags_clear(vma, VM_MAYWRITE);
     }
 
     vma->vm_ops = &nv_vm_ops;
diff --git a/nvidia/nvidia.Kbuild b/nvidia/nvidia.Kbuild
index eac42be..7e811ff 100644
--- a/nvidia/nvidia.Kbuild
+++ b/nvidia/nvidia.Kbuild
@@ -207,6 +207,7 @@ NV_CONFTEST_TYPE_COMPILE_TESTS += mm_has_mmap_lock
 NV_CONFTEST_TYPE_COMPILE_TESTS += pci_channel_state
 NV_CONFTEST_TYPE_COMPILE_TESTS += kmem_cache_has_kobj_remove_work
 NV_CONFTEST_TYPE_COMPILE_TESTS += sysfs_slab_unlink
+NV_CONFTEST_TYPE_COMPILE_TESTS += vm_area_struct_has_const_vm_flags
 
 NV_CONFTEST_GENERIC_COMPILE_TESTS += dom0_kernel_present
 NV_CONFTEST_GENERIC_COMPILE_TESTS += nvidia_vgpu_kvm_build
-- 
2.20.1

