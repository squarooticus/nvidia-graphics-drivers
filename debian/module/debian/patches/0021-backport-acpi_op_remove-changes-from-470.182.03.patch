From cdd74651e3eb068c983b5385eb1d8f4541034674 Mon Sep 17 00:00:00 2001
From: Andreas Beckmann <anbe@debian.org>
Date: Fri, 7 Apr 2023 12:24:09 +0200
Subject: [PATCH] backport acpi_op_remove changes from 470.182.03

---
 conftest.sh      |  5 +++++
 nvidia/nv-acpi.c | 24 +++++++++++++-----------
 2 files changed, 18 insertions(+), 11 deletions(-)

diff --git a/conftest.sh b/conftest.sh
index 140cd21..4fd8e86 100755
--- a/conftest.sh
+++ b/conftest.sh
@@ -632,6 +632,11 @@ compile_test() {
             # ("ACPI: Remove useless type argument of driver .remove()
             # operation") in v3.9
             #
+            # acpi_op_remove() return type was changed to void by commit
+            # 6c0eb5ba3500 (“ACPI: make remove callback of ACPI driver void”)
+            # in v6.2-rc1 (11-14-2022). NV_ACPI_DEVICE_OPS_REMOVE_ARGUMENT_COUNT
+            # will be undefined for this case.
+            #
             echo "$CONFTEST_PREAMBLE
             #include <linux/acpi.h>
 
diff --git a/nvidia/nv-acpi.c b/nvidia/nv-acpi.c
index d5b8aa9..18cb6e8 100644
--- a/nvidia/nv-acpi.c
+++ b/nvidia/nv-acpi.c
@@ -25,10 +25,12 @@ static NV_STATUS   nv_acpi_extract_object  (const union acpi_object *, void *, N
 
 static int         nv_acpi_add             (struct acpi_device *);
 
-#if !defined(NV_ACPI_DEVICE_OPS_REMOVE_ARGUMENT_COUNT) || (NV_ACPI_DEVICE_OPS_REMOVE_ARGUMENT_COUNT == 2)
-static int         nv_acpi_remove_two_args(struct acpi_device *device, int type);
+#if !defined(NV_ACPI_DEVICE_OPS_REMOVE_ARGUMENT_COUNT)
+static void        nv_acpi_remove(struct acpi_device *device);
+#elif (NV_ACPI_DEVICE_OPS_REMOVE_ARGUMENT_COUNT == 2)
+static int         nv_acpi_remove(struct acpi_device *device, int type);
 #else
-static int         nv_acpi_remove_one_arg(struct acpi_device *device);
+static int         nv_acpi_remove(struct acpi_device *device);
 #endif
 
 static void        nv_acpi_event           (acpi_handle, u32, void *);
@@ -80,11 +82,7 @@ static const struct acpi_driver nv_acpi_driver_template = {
     .ids = nv_video_device_ids,
     .ops = {
         .add = nv_acpi_add,
-#if !defined(NV_ACPI_DEVICE_OPS_REMOVE_ARGUMENT_COUNT) || (NV_ACPI_DEVICE_OPS_REMOVE_ARGUMENT_COUNT == 2)
-        .remove = nv_acpi_remove_two_args,
-#else
-        .remove = nv_acpi_remove_one_arg,
-#endif
+        .remove = nv_acpi_remove,
     },
 };
 
@@ -342,10 +340,12 @@ static int nv_acpi_add(struct acpi_device *device)
     return 0;
 }
 
-#if !defined(NV_ACPI_DEVICE_OPS_REMOVE_ARGUMENT_COUNT) || (NV_ACPI_DEVICE_OPS_REMOVE_ARGUMENT_COUNT == 2)
-static int nv_acpi_remove_two_args(struct acpi_device *device, int type)
+#if !defined(NV_ACPI_DEVICE_OPS_REMOVE_ARGUMENT_COUNT)
+static void nv_acpi_remove(struct acpi_device *device)
+#elif (NV_ACPI_DEVICE_OPS_REMOVE_ARGUMENT_COUNT == 2)
+static int nv_acpi_remove(struct acpi_device *device, int type)
 #else
-static int nv_acpi_remove_one_arg(struct acpi_device *device)
+static int nv_acpi_remove(struct acpi_device *device)
 #endif
 {
     /*
@@ -396,7 +396,9 @@ static int nv_acpi_remove_one_arg(struct acpi_device *device)
         device->driver_data = NULL;
     }
 
+#if defined(NV_ACPI_DEVICE_OPS_REMOVE_ARGUMENT_COUNT)
     return status;
+#endif
 }
 
 /*
-- 
2.20.1

